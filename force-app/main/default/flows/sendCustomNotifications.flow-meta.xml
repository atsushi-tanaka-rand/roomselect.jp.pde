<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <actionCalls>
        <description>カスタム通知（反響メール画面へ遷移）</description>
        <name>customTuti</name>
        <label>カスタム通知</label>
        <locationX>799</locationX>
        <locationY>535</locationY>
        <actionName>customNotificationAction</actionName>
        <actionType>customNotificationAction</actionType>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>customNotifTypeId</name>
            <value>
                <elementReference>getCustomNotifications.Id</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>recipientIds</name>
            <value>
                <elementReference>UserIdList</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>targetId</name>
            <value>
                <elementReference>echoMail.Id</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>title</name>
            <value>
                <stringValue>メールを受信しました</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>body</name>
            <value>
                <stringValue>お客様名：{!echoMail.CustomerName__c}\n送信者：{!echoMail.FromEmail__c}\n件名：{!echoMail.Subject__c}\n ※クリックで画面遷移します</stringValue>
            </value>
        </inputParameters>
    </actionCalls>
    <actionCalls>
        <description>カスタム通知を送信する（反響メール画面以外へ遷移）</description>
        <name>customTutiPageTransitions</name>
        <label>カスタム通知</label>
        <locationX>448</locationX>
        <locationY>277</locationY>
        <actionName>customNotificationAction</actionName>
        <actionType>customNotificationAction</actionType>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>customNotifTypeId</name>
            <value>
                <elementReference>getCustomNotifications.Id</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>recipientIds</name>
            <value>
                <elementReference>UserIdList</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>targetId</name>
            <value>
                <elementReference>echoMail.Id</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>targetPageRef</name>
            <value>
                <elementReference>transitionDestinationURL</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>title</name>
            <value>
                <stringValue>メールを受信しました</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>body</name>
            <value>
                <stringValue>送信者：{!echoMail.FromEmail__c}\n件名：{!echoMail.Subject__c}\n ※クリックで画面遷移します</stringValue>
            </value>
        </inputParameters>
    </actionCalls>
    <actionCalls>
        <description>カスタム通知を送信する（反響メール画面以外へ遷移）</description>
        <name>customTutiPageTransitionsCustomer</name>
        <label>カスタム通知</label>
        <locationX>430</locationX>
        <locationY>50</locationY>
        <actionName>customNotificationAction</actionName>
        <actionType>customNotificationAction</actionType>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>customNotifTypeId</name>
            <value>
                <elementReference>getCustomNotifications.Id</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>recipientIds</name>
            <value>
                <elementReference>UserIdList</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>targetId</name>
            <value>
                <elementReference>echoMail.Id</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>targetPageRef</name>
            <value>
                <elementReference>transitionDestinationURL</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>title</name>
            <value>
                <stringValue>メールを受信しました</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>body</name>
            <value>
                <stringValue>お客様名：{!AccountName}\n送信者：{!echoMail.FromEmail__c}\n件名：{!echoMail.Subject__c}\n ※クリックで画面遷移します</stringValue>
            </value>
        </inputParameters>
    </actionCalls>
    <apiVersion>49.0</apiVersion>
    <assignments>
        <description>有効なユーザのIdをStrngのListに追加</description>
        <name>addStringList</name>
        <label>StrngのListに追加</label>
        <locationX>1025</locationX>
        <locationY>1068</locationY>
        <assignmentItems>
            <assignToReference>ActiveUserList</assignToReference>
            <operator>AddAtStart</operator>
            <value>
                <elementReference>ActiveUSerLoop.Id</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>ActiveUSerLoop</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>公開グループのユーザをリストに追加</description>
        <name>addUserId</name>
        <label>ユーザIdを追加</label>
        <locationX>1023</locationX>
        <locationY>865</locationY>
        <assignmentItems>
            <assignToReference>UserIdList</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>groupMember.UserOrGroupId</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>GroupMemberRoop</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>setAccountPass</name>
        <label>お客様詳細のパス</label>
        <locationX>682</locationX>
        <locationY>125</locationY>
        <assignmentItems>
            <assignToReference>transitionDestinationURL</assignToReference>
            <operator>Add</operator>
            <value>
                <stringValue>{&quot;type&quot;: &quot;standard__webPage&quot;,&quot;attributes&quot;: {&quot;url&quot;: &quot;/apex/grung__GA102001View?AccountId={!AccountID}&quot;}}</stringValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>customTutiPageTransitionsCustomer</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>setEchoPass</name>
        <label>反響一覧画面URL</label>
        <locationX>693</locationX>
        <locationY>331</locationY>
        <assignmentItems>
            <assignToReference>transitionDestinationURL</assignToReference>
            <operator>Add</operator>
            <value>
                <stringValue>{&quot;type&quot;: &quot;standard__webPage&quot;,&quot;attributes&quot;: {&quot;url&quot;: &quot;/apex/grung__GA101002View&quot;}}</stringValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>customTutiPageTransitions</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>setSpecifiedMailPass</name>
        <label>指定メール画面パス</label>
        <locationX>701</locationX>
        <locationY>524</locationY>
        <assignmentItems>
            <assignToReference>transitionDestinationURL</assignToReference>
            <operator>Add</operator>
            <value>
                <stringValue>{&quot;type&quot;: &quot;standard__webPage&quot;,&quot;attributes&quot;: {&quot;url&quot;: &quot;/apex/grung__GA106001View&quot;}}</stringValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>customTutiPageTransitions</targetReference>
        </connector>
    </assignments>
    <decisions>
        <name>AccountIdCheck2</name>
        <label>取引先ID有無</label>
        <locationX>871</locationX>
        <locationY>396</locationY>
        <defaultConnector>
            <targetReference>setEchoPass</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>無</defaultConnectorLabel>
        <rules>
            <name>yes</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>AccountID</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>getAccountInfo</targetReference>
            </connector>
            <label>有</label>
        </rules>
    </decisions>
    <decisions>
        <description>メールアドレスと一致する店舗が取得できるか？</description>
        <name>canGetShop</name>
        <label>店舗が取得できるか？</label>
        <locationX>54</locationX>
        <locationY>611</locationY>
        <defaultConnectorLabel>デフォルトの結果</defaultConnectorLabel>
        <rules>
            <name>success</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>shop</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>getPublicGroup</targetReference>
            </connector>
            <label>できた</label>
        </rules>
    </decisions>
    <decisions>
        <description>有効なユーザのListに含まれていたら</description>
        <name>containsActiveUser</name>
        <label>ユーザが有効なら</label>
        <locationX>831</locationX>
        <locationY>949</locationY>
        <defaultConnector>
            <targetReference>GroupMemberRoop</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>含まれていない</defaultConnectorLabel>
        <rules>
            <name>contains</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>ActiveUserList</leftValueReference>
                <operator>Contains</operator>
                <rightValue>
                    <elementReference>groupMember.UserOrGroupId</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>addUserId</targetReference>
            </connector>
            <label>含まれている</label>
        </rules>
    </decisions>
    <decisions>
        <name>IsEchoMail</name>
        <label>対応明細がが空</label>
        <locationX>1075</locationX>
        <locationY>655</locationY>
        <defaultConnector>
            <targetReference>getCorrespond</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>空でない</defaultConnectorLabel>
        <rules>
            <name>IsNull</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>getCorrespondDetail</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>customTuti</targetReference>
            </connector>
            <label>空</label>
        </rules>
    </decisions>
    <decisions>
        <name>isNullCustomNotification</name>
        <label>通知が空？</label>
        <locationX>403</locationX>
        <locationY>619</locationY>
        <defaultConnector>
            <targetReference>isSpecifiedMail</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>空でない</defaultConnectorLabel>
        <rules>
            <name>isNull2</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>getCustomNotifications</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <label>空</label>
        </rules>
    </decisions>
    <decisions>
        <name>isSpecifiedMail</name>
        <label>指定メールフラグ</label>
        <locationX>841</locationX>
        <locationY>727</locationY>
        <defaultConnector>
            <targetReference>getCorrespondDetail</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>無</defaultConnectorLabel>
        <rules>
            <name>True</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>echoMail.IsSpecifiedMail__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>setSpecifiedMailPass</targetReference>
            </connector>
            <label>有</label>
        </rules>
    </decisions>
    <decisions>
        <description>ユーザのリストが空かどうか判定。空じゃなければカスタム通知を行う。</description>
        <name>IsUserListNull</name>
        <label>ﾕｰｻﾞﾘｽﾄが空？</label>
        <locationX>408</locationX>
        <locationY>799</locationY>
        <defaultConnector>
            <targetReference>getCustomNotifications</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>空ではない</defaultConnectorLabel>
        <rules>
            <name>isBlank</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>UserIdList</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <label>空</label>
        </rules>
    </decisions>
    <decisions>
        <name>UniqueName</name>
        <label>公開グループが</label>
        <locationX>50</locationX>
        <locationY>786</locationY>
        <defaultConnectorLabel>ない</defaultConnectorLabel>
        <rules>
            <name>existsGroup</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>groupId</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue></stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>getGroupMember</targetReference>
            </connector>
            <label>ある</label>
        </rules>
    </decisions>
    <description>反響メールの作成をトリガとして、カスタム通知を送信する</description>
    <environments>Default</environments>
    <interviewLabel>メール受信カスタム通知_送信 {!$Flow.CurrentDateTime}</interviewLabel>
    <label>メール受信カスタム通知_送信</label>
    <loops>
        <description>有効なユーザを回す</description>
        <name>ActiveUSerLoop</name>
        <label>有効なユーザループ</label>
        <locationX>595</locationX>
        <locationY>1068</locationY>
        <collectionReference>getActiveUser</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>addStringList</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <targetReference>GroupMemberRoop</targetReference>
        </noMoreValuesConnector>
    </loops>
    <loops>
        <description>グループメンバーを一つ一つ見る</description>
        <name>GroupMemberRoop</name>
        <label>グループメンバーループ</label>
        <locationX>596</locationX>
        <locationY>871</locationY>
        <assignNextValueToReference>groupMember</assignNextValueToReference>
        <collectionReference>getGroupMember</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>containsActiveUser</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <targetReference>IsUserListNull</targetReference>
        </noMoreValuesConnector>
    </loops>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>FREE_FORM_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordLookups>
        <description>取引先情報の取得</description>
        <name>getAccountInfo</name>
        <label>取引先情報取得</label>
        <locationX>971</locationX>
        <locationY>128</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>setAccountPass</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>AccountID</elementReference>
            </value>
        </filters>
        <object>Account</object>
        <outputAssignments>
            <assignToReference>AccountName</assignToReference>
            <field>Name</field>
        </outputAssignments>
    </recordLookups>
    <recordLookups>
        <name>getActiveUser</name>
        <label>有効なユーザを一括取得</label>
        <locationX>264</locationX>
        <locationY>1067</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>ActiveUSerLoop</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>IsActive</field>
            <operator>EqualTo</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>User</object>
        <queriedFields>Id</queriedFields>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>getCorrespond</name>
        <label>対応取得</label>
        <locationX>1027</locationX>
        <locationY>426</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>AccountIdCheck2</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>getCorrespondDetail.Corresponds__c</elementReference>
            </value>
        </filters>
        <object>Correspond__c</object>
        <outputAssignments>
            <assignToReference>AccountID</assignToReference>
            <field>AccountId__c</field>
        </outputAssignments>
    </recordLookups>
    <recordLookups>
        <name>getCorrespondDetail</name>
        <label>対応明細取得</label>
        <locationX>964</locationX>
        <locationY>725</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>IsEchoMail</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>EchoMail__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>echoMail.Id</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>CorrespondDetail__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <description>カスタム通知種別を取得</description>
        <name>getCustomNotifications</name>
        <label>カスタム通知種別取得</label>
        <locationX>596</locationX>
        <locationY>703</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>isNullCustomNotification</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>DeveloperName</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>mailNotifications</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>CustomNotificationType</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <description>公開グループに所属するユーザを取得</description>
        <name>getGroupMember</name>
        <label>グループメンバー取得</label>
        <locationX>263</locationX>
        <locationY>886</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>getActiveUser</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>GroupId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>groupId</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>GroupMember</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <description>グループ名に店舗名が入っているグループメンバーを取得する</description>
        <name>getPublicGroup</name>
        <label>公開グループ取得</label>
        <locationX>262</locationX>
        <locationY>721</locationY>
        <assignNullValuesIfNoRecordsFound>true</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>UniqueName</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Name</field>
            <operator>Contains</operator>
            <value>
                <elementReference>shop.Name</elementReference>
            </value>
        </filters>
        <filters>
            <field>Type</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Regular</stringValue>
            </value>
        </filters>
        <object>Group</object>
        <outputAssignments>
            <assignToReference>groupId</assignToReference>
            <field>Id</field>
        </outputAssignments>
    </recordLookups>
    <recordLookups>
        <description>反響メールのメールアドレスと同じメールが設定されている店舗を取得する</description>
        <name>getShop</name>
        <label>店舗取得</label>
        <locationX>263</locationX>
        <locationY>549</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>canGetShop</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Email__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>echoMail.Email__c</elementReference>
            </value>
        </filters>
        <object>Shop__c</object>
        <outputReference>shop</outputReference>
        <queriedFields>Id</queriedFields>
        <queriedFields>Name</queriedFields>
    </recordLookups>
    <start>
        <locationX>137</locationX>
        <locationY>395</locationY>
        <connector>
            <targetReference>getShop</targetReference>
        </connector>
    </start>
    <status>Active</status>
    <variables>
        <name>AccountID</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <description>取引先名</description>
        <name>AccountName</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
    </variables>
    <variables>
        <description>有効なユーザのリスト</description>
        <name>ActiveUserList</name>
        <dataType>String</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <description>プロセスビルダーから受け渡される反響メールレコード</description>
        <name>echoMail</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
        <objectType>EchoMail__c</objectType>
    </variables>
    <variables>
        <description>取得した公開グループIDを格納</description>
        <name>groupId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
        <value>
            <stringValue></stringValue>
        </value>
    </variables>
    <variables>
        <description>ループ用グループメンバーレコード</description>
        <name>groupMember</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>GroupMember</objectType>
    </variables>
    <variables>
        <description>グループメンバーレコードを格納するループ用のList</description>
        <name>GroupMemberForRoop</name>
        <dataType>SObject</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>GroupMember</objectType>
    </variables>
    <variables>
        <description>店舗情報。反響メールのメールアドレスと同じ店舗</description>
        <name>shop</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>Shop__c</objectType>
    </variables>
    <variables>
        <description>ループ用の変数</description>
        <name>ShopTransferForRoop</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>ShopTransfer__c</objectType>
    </variables>
    <variables>
        <description>システム設定。テスト日付を入れるため。</description>
        <name>SystemCfg</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>SystemConfig__c</objectType>
    </variables>
    <variables>
        <description>今日の日付。システム設定のテスト日付に値があれば、そちらを優先する。</description>
        <name>todayDate</name>
        <dataType>Date</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <value>
            <elementReference>$Flow.CurrentDate</elementReference>
        </value>
    </variables>
    <variables>
        <name>transitionDestinationURL</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>userID</name>
        <dataType>String</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <description>UserのIdList。カスタム通知を行う先。</description>
        <name>UserIdList</name>
        <dataType>String</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
</Flow>
